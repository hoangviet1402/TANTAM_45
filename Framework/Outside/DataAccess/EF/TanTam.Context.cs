//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using EntitiesObject.Entities.TanTamEntities;
    
    public partial class TanTamEntities : DbContext
    {
        public TanTamEntities()
            : base("name=TanTamEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int Ins_Account_CreateForEmployees(string email, string password, Nullable<int> companyId, Nullable<int> role, ObjectParameter accountId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_CreateForEmployees", emailParameter, passwordParameter, companyIdParameter, roleParameter, accountId);
        }
    
        public virtual int Ins_Account_CreatePass(Nullable<int> employeeAccountMapId, string pass, ObjectParameter outResult)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_CreatePass", employeeAccountMapIdParameter, passParameter, outResult);
        }
    
        public virtual int Ins_Account_CreatePassFornewEmployee(Nullable<int> employeeAccountMapId, string pass, ObjectParameter outResult)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_CreatePassFornewEmployee", employeeAccountMapIdParameter, passParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_Account_EmployeesInfoInCompany_Result> Ins_Account_EmployeesInfoInCompany(Nullable<int> accountId, Nullable<int> companyId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_EmployeesInfoInCompany_Result>("Ins_Account_EmployeesInfoInCompany", accountIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<Ins_Account_GetAllCompany_Result> Ins_Account_GetAllCompany(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_GetAllCompany_Result>("Ins_Account_GetAllCompany", accountIdParameter);
        }
    
        public virtual ObjectResult<Ins_Account_GetInfor_Result> Ins_Account_GetInfor(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_GetInfor_Result>("Ins_Account_GetInfor", accountIdParameter);
        }
    
        public virtual ObjectResult<Ins_Account_GetTokensByEmployeeID_Result> Ins_Account_GetTokensByEmployeeID(Nullable<int> accountId, Nullable<int> companyId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_GetTokensByEmployeeID_Result>("Ins_Account_GetTokensByEmployeeID", accountIdParameter, companyIdParameter);
        }
    
        public virtual int Ins_Account_InsertTokens(Nullable<int> employeeAccountMapId, string jwtID, string refreshToken, Nullable<int> lifeTime, string ip, string imie, ObjectParameter outResult)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            var jwtIDParameter = jwtID != null ?
                new ObjectParameter("JwtID", jwtID) :
                new ObjectParameter("JwtID", typeof(string));
    
            var refreshTokenParameter = refreshToken != null ?
                new ObjectParameter("RefreshToken", refreshToken) :
                new ObjectParameter("RefreshToken", typeof(string));
    
            var lifeTimeParameter = lifeTime.HasValue ?
                new ObjectParameter("LifeTime", lifeTime) :
                new ObjectParameter("LifeTime", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var imieParameter = imie != null ?
                new ObjectParameter("Imie", imie) :
                new ObjectParameter("Imie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_InsertTokens", employeeAccountMapIdParameter, jwtIDParameter, refreshTokenParameter, lifeTimeParameter, ipParameter, imieParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_Account_Login_Result> Ins_Account_Login(Nullable<int> accountId, Nullable<int> companyId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_Login_Result>("Ins_Account_Login", accountIdParameter, companyIdParameter);
        }
    
        public virtual int Ins_Account_Register(string phone, string phoneCode, string email, string fullName, string deviceId, ObjectParameter accountID, ObjectParameter companyID, ObjectParameter employeeAccountMapID)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var phoneCodeParameter = phoneCode != null ?
                new ObjectParameter("PhoneCode", phoneCode) :
                new ObjectParameter("PhoneCode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_Register", phoneParameter, phoneCodeParameter, emailParameter, fullNameParameter, deviceIdParameter, accountID, companyID, employeeAccountMapID);
        }
    
        public virtual int Ins_Account_RevokeToken(Nullable<int> id, string ip, string imie, ObjectParameter outResult)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var imieParameter = imie != null ?
                new ObjectParameter("Imie", imie) :
                new ObjectParameter("Imie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_RevokeToken", idParameter, ipParameter, imieParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_Account_UpdateFullName_Result> Ins_Account_UpdateFullName(string phone, string email, string fullName, Nullable<bool> isUsePhone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var isUsePhoneParameter = isUsePhone.HasValue ?
                new ObjectParameter("IsUsePhone", isUsePhone) :
                new ObjectParameter("IsUsePhone", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_UpdateFullName_Result>("Ins_Account_UpdateFullName", phoneParameter, emailParameter, fullNameParameter, isUsePhoneParameter);
        }
    
        public virtual int Ins_Account_UpdatePass(Nullable<int> accountId, Nullable<int> companyId, string pass, string oldPass, Nullable<int> needSetPassword, ObjectParameter outResult)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var oldPassParameter = oldPass != null ?
                new ObjectParameter("OldPass", oldPass) :
                new ObjectParameter("OldPass", typeof(string));
    
            var needSetPasswordParameter = needSetPassword.HasValue ?
                new ObjectParameter("NeedSetPassword", needSetPassword) :
                new ObjectParameter("NeedSetPassword", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_UpdatePass", accountIdParameter, companyIdParameter, passParameter, oldPassParameter, needSetPasswordParameter, outResult);
        }
    
        public virtual int Ins_Account_UpdateToken_JwtID(Nullable<int> id, string jwtID, string ip, string imie, ObjectParameter outResult)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var jwtIDParameter = jwtID != null ?
                new ObjectParameter("JwtID", jwtID) :
                new ObjectParameter("JwtID", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var imieParameter = imie != null ?
                new ObjectParameter("Imie", imie) :
                new ObjectParameter("Imie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Account_UpdateToken_JwtID", idParameter, jwtIDParameter, ipParameter, imieParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_Account_Validata_Result> Ins_Account_Validata(string accountName, Nullable<bool> isUsePhone)
        {
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var isUsePhoneParameter = isUsePhone.HasValue ?
                new ObjectParameter("IsUsePhone", isUsePhone) :
                new ObjectParameter("IsUsePhone", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Account_Validata_Result>("Ins_Account_Validata", accountNameParameter, isUsePhoneParameter);
        }
    
        public virtual ObjectResult<Ins_Business_GetList_Result> Ins_Business_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Business_GetList_Result>("Ins_Business_GetList");
        }
    
        public virtual int Ins_ComPany_CreateSetupStep(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ComPany_CreateSetupStep", companyIdParameter);
        }
    
        public virtual ObjectResult<Ins_Company_GetEmployeeID_Result> Ins_Company_GetEmployeeID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Company_GetEmployeeID_Result>("Ins_Company_GetEmployeeID", employeeIDParameter);
        }
    
        public virtual ObjectResult<Ins_Company_GetInfor_Result> Ins_Company_GetInfor(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Company_GetInfor_Result>("Ins_Company_GetInfor", companyIdParameter);
        }
    
        public virtual ObjectResult<Ins_Company_GetInforAccount_Result> Ins_Company_GetInforAccount(Nullable<int> accountId, Nullable<int> companyID)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Company_GetInforAccount_Result>("Ins_Company_GetInforAccount", accountIdParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Ins_Company_GetSetupStep_Result> Ins_Company_GetSetupStep(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Company_GetSetupStep_Result>("Ins_Company_GetSetupStep", companyIdParameter);
        }
    
        public virtual int Ins_ComPany_UpdateSetupStep(Nullable<int> companyId, Nullable<int> code, ObjectParameter outResult)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ComPany_UpdateSetupStep", companyIdParameter, codeParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_CompanyBranch_GetAllByCompany_Result> Ins_CompanyBranch_GetAllByCompany(Nullable<int> companyId, Nullable<int> perPage, ObjectParameter total)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var perPageParameter = perPage.HasValue ?
                new ObjectParameter("PerPage", perPage) :
                new ObjectParameter("PerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyBranch_GetAllByCompany_Result>("Ins_CompanyBranch_GetAllByCompany", companyIdParameter, perPageParameter, total);
        }
    
        public virtual ObjectResult<Ins_CompanyBranch_GetAllInfor_Result> Ins_CompanyBranch_GetAllInfor(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyBranch_GetAllInfor_Result>("Ins_CompanyBranch_GetAllInfor", companyIdParameter);
        }
    
        public virtual ObjectResult<Ins_CompanyBranch_GetInfor_Result> Ins_CompanyBranch_GetInfor(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyBranch_GetInfor_Result>("Ins_CompanyBranch_GetInfor", companyIdParameter);
        }
    
        public virtual int Ins_CompanyDepartment_Create(string name, Nullable<int> branchId, Nullable<int> companyId, ObjectParameter outResult)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_CompanyDepartment_Create", nameParameter, branchIdParameter, companyIdParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_CompanyDepartment_CreateInAllBranchId_Result> Ins_CompanyDepartment_CreateInAllBranchId(string name, string alias, string code, Nullable<int> companyId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyDepartment_CreateInAllBranchId_Result>("Ins_CompanyDepartment_CreateInAllBranchId", nameParameter, aliasParameter, codeParameter, companyIdParameter);
        }
    
        public virtual int Ins_CompanyDepartment_CreateMultipleInAllBranches(Nullable<int> companyId, string departmentNames, ObjectParameter outResult)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var departmentNamesParameter = departmentNames != null ?
                new ObjectParameter("DepartmentNames", departmentNames) :
                new ObjectParameter("DepartmentNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_CompanyDepartment_CreateMultipleInAllBranches", companyIdParameter, departmentNamesParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_CompanyDepartment_GetAll_Result> Ins_CompanyDepartment_GetAll(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyDepartment_GetAll_Result>("Ins_CompanyDepartment_GetAll", companyIdParameter);
        }
    
        public virtual int Ins_CompanyPosition_Create(string name, Nullable<int> departmentId, Nullable<int> companyId, ObjectParameter outResult)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_CompanyPosition_Create", nameParameter, departmentIdParameter, companyIdParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_CompanyPosition_CreateInAllBranchId_Result> Ins_CompanyPosition_CreateInAllBranchId(string name, string alias, string code, Nullable<int> companyId, Nullable<int> expYear)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var expYearParameter = expYear.HasValue ?
                new ObjectParameter("ExpYear", expYear) :
                new ObjectParameter("ExpYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_CompanyPosition_CreateInAllBranchId_Result>("Ins_CompanyPosition_CreateInAllBranchId", nameParameter, aliasParameter, codeParameter, companyIdParameter, expYearParameter);
        }
    
        public virtual int Ins_Employee_AddIntoBranch(Nullable<int> employeeId, Nullable<int> branchId, Nullable<bool> isPrimary, ObjectParameter outResult)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_AddIntoBranch", employeeIdParameter, branchIdParameter, isPrimaryParameter, outResult);
        }
    
        public virtual int Ins_Employee_Create(string fullName, string employeesCode, string phone, string phoneCode, string email, string password, Nullable<int> companyId, Nullable<int> branchId, Nullable<int> role, string deviceId, ObjectParameter employeeAccountId, ObjectParameter isNewUser, ObjectParameter needSetPassword, ObjectParameter needSetCompany)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var employeesCodeParameter = employeesCode != null ?
                new ObjectParameter("EmployeesCode", employeesCode) :
                new ObjectParameter("EmployeesCode", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var phoneCodeParameter = phoneCode != null ?
                new ObjectParameter("PhoneCode", phoneCode) :
                new ObjectParameter("PhoneCode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_Create", fullNameParameter, employeesCodeParameter, phoneParameter, phoneCodeParameter, emailParameter, passwordParameter, companyIdParameter, branchIdParameter, roleParameter, deviceIdParameter, employeeAccountId, isNewUser, needSetPassword, needSetCompany);
        }
    
        public virtual int Ins_Employee_Delete(Nullable<int> employeeAccountId)
        {
            var employeeAccountIdParameter = employeeAccountId.HasValue ?
                new ObjectParameter("EmployeeAccountId", employeeAccountId) :
                new ObjectParameter("EmployeeAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_Delete", employeeAccountIdParameter);
        }
    
        public virtual ObjectResult<Ins_Employee_GetAll_Result> Ins_Employee_GetAll(Nullable<int> companyId, Nullable<int> page, Nullable<int> pageSize, string fullName, Nullable<bool> isActive)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Employee_GetAll_Result>("Ins_Employee_GetAll", companyIdParameter, pageParameter, pageSizeParameter, fullNameParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<Ins_Employee_GetEmployeeID_Result> Ins_Employee_GetEmployeeID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Employee_GetEmployeeID_Result>("Ins_Employee_GetEmployeeID", employeeIDParameter);
        }
    
        public virtual ObjectResult<string> Ins_Employee_GetLastEmployeeCode(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Ins_Employee_GetLastEmployeeCode", companyIdParameter);
        }
    
        public virtual ObjectResult<Ins_Employee_GetList_Result> Ins_Employee_GetList(Nullable<int> company_id, Nullable<int> page, Nullable<int> page_size, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<bool> is_no_need_timekeeping, ObjectParameter totalRecords)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var page_sizeParameter = page_size.HasValue ?
                new ObjectParameter("page_size", page_size) :
                new ObjectParameter("page_size", typeof(int));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var is_no_need_timekeepingParameter = is_no_need_timekeeping.HasValue ?
                new ObjectParameter("is_no_need_timekeeping", is_no_need_timekeeping) :
                new ObjectParameter("is_no_need_timekeeping", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Employee_GetList_Result>("Ins_Employee_GetList", company_idParameter, pageParameter, page_sizeParameter, start_dateParameter, end_dateParameter, is_no_need_timekeepingParameter, totalRecords);
        }
    
        public virtual ObjectResult<Ins_Employee_GetShiftsInBranch_Result> Ins_Employee_GetShiftsInBranch(Nullable<int> employeeAccountMapId, Nullable<int> companyId)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Employee_GetShiftsInBranch_Result>("Ins_Employee_GetShiftsInBranch", employeeAccountMapIdParameter, companyIdParameter);
        }
    
        public virtual int Ins_Employee_GetTokensByEmployeeID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_GetTokensByEmployeeID", employeeIDParameter);
        }
    
        public virtual int Ins_Employee_MultiDelete(string employeeAccountIds)
        {
            var employeeAccountIdsParameter = employeeAccountIds != null ?
                new ObjectParameter("EmployeeAccountIds", employeeAccountIds) :
                new ObjectParameter("EmployeeAccountIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_MultiDelete", employeeAccountIdsParameter);
        }
    
        public virtual int Ins_Employee_ResetPass(Nullable<int> employeeAccountMapId, string pass)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_ResetPass", employeeAccountMapIdParameter, passParameter);
        }
    
        public virtual int Ins_Employee_UpdateDetails(Nullable<int> employeeId, string fullName, Nullable<System.DateTime> birthDate, string gender, string employeeCode, Nullable<int> displayOrder, string email, string phone, string phoneCode)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var phoneCodeParameter = phoneCode != null ?
                new ObjectParameter("PhoneCode", phoneCode) :
                new ObjectParameter("PhoneCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Employee_UpdateDetails", employeeIdParameter, fullNameParameter, birthDateParameter, genderParameter, employeeCodeParameter, displayOrderParameter, emailParameter, phoneParameter, phoneCodeParameter);
        }
    
        public virtual ObjectResult<Ins_Shift_Branch_Create_Result> Ins_Shift_Branch_Create(Nullable<int> shiftID, Nullable<int> companyID, Nullable<int> branchID, Nullable<bool> isInsertOne)
        {
            var shiftIDParameter = shiftID.HasValue ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var isInsertOneParameter = isInsertOne.HasValue ?
                new ObjectParameter("IsInsertOne", isInsertOne) :
                new ObjectParameter("IsInsertOne", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Shift_Branch_Create_Result>("Ins_Shift_Branch_Create", shiftIDParameter, companyIDParameter, branchIDParameter, isInsertOneParameter);
        }
    
        public virtual ObjectResult<Ins_Shift_CreateTimeInOutConfig_Result> Ins_Shift_CreateTimeInOutConfig(Nullable<int> shiftId, Nullable<int> startHourId, Nullable<int> startMinuteId, Nullable<int> endHourId, Nullable<int> endMinuteId, Nullable<int> startCheckInMinuteId, Nullable<int> endCheckInMinuteId, Nullable<int> startCheckOutMinuteId, Nullable<int> endCheckOutMinuteId, Nullable<int> startCheckInHourId, Nullable<int> endCheckInHourId, Nullable<int> startCheckOutHourId, Nullable<int> endCheckOutHourId, Nullable<int> maxLateCheckInOutMinute, Nullable<int> minSoonCheckInOutMinute, string lang)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var startHourIdParameter = startHourId.HasValue ?
                new ObjectParameter("StartHourId", startHourId) :
                new ObjectParameter("StartHourId", typeof(int));
    
            var startMinuteIdParameter = startMinuteId.HasValue ?
                new ObjectParameter("StartMinuteId", startMinuteId) :
                new ObjectParameter("StartMinuteId", typeof(int));
    
            var endHourIdParameter = endHourId.HasValue ?
                new ObjectParameter("EndHourId", endHourId) :
                new ObjectParameter("EndHourId", typeof(int));
    
            var endMinuteIdParameter = endMinuteId.HasValue ?
                new ObjectParameter("EndMinuteId", endMinuteId) :
                new ObjectParameter("EndMinuteId", typeof(int));
    
            var startCheckInMinuteIdParameter = startCheckInMinuteId.HasValue ?
                new ObjectParameter("StartCheckInMinuteId", startCheckInMinuteId) :
                new ObjectParameter("StartCheckInMinuteId", typeof(int));
    
            var endCheckInMinuteIdParameter = endCheckInMinuteId.HasValue ?
                new ObjectParameter("EndCheckInMinuteId", endCheckInMinuteId) :
                new ObjectParameter("EndCheckInMinuteId", typeof(int));
    
            var startCheckOutMinuteIdParameter = startCheckOutMinuteId.HasValue ?
                new ObjectParameter("StartCheckOutMinuteId", startCheckOutMinuteId) :
                new ObjectParameter("StartCheckOutMinuteId", typeof(int));
    
            var endCheckOutMinuteIdParameter = endCheckOutMinuteId.HasValue ?
                new ObjectParameter("EndCheckOutMinuteId", endCheckOutMinuteId) :
                new ObjectParameter("EndCheckOutMinuteId", typeof(int));
    
            var startCheckInHourIdParameter = startCheckInHourId.HasValue ?
                new ObjectParameter("StartCheckInHourId", startCheckInHourId) :
                new ObjectParameter("StartCheckInHourId", typeof(int));
    
            var endCheckInHourIdParameter = endCheckInHourId.HasValue ?
                new ObjectParameter("EndCheckInHourId", endCheckInHourId) :
                new ObjectParameter("EndCheckInHourId", typeof(int));
    
            var startCheckOutHourIdParameter = startCheckOutHourId.HasValue ?
                new ObjectParameter("StartCheckOutHourId", startCheckOutHourId) :
                new ObjectParameter("StartCheckOutHourId", typeof(int));
    
            var endCheckOutHourIdParameter = endCheckOutHourId.HasValue ?
                new ObjectParameter("EndCheckOutHourId", endCheckOutHourId) :
                new ObjectParameter("EndCheckOutHourId", typeof(int));
    
            var maxLateCheckInOutMinuteParameter = maxLateCheckInOutMinute.HasValue ?
                new ObjectParameter("MaxLateCheckInOutMinute", maxLateCheckInOutMinute) :
                new ObjectParameter("MaxLateCheckInOutMinute", typeof(int));
    
            var minSoonCheckInOutMinuteParameter = minSoonCheckInOutMinute.HasValue ?
                new ObjectParameter("MinSoonCheckInOutMinute", minSoonCheckInOutMinute) :
                new ObjectParameter("MinSoonCheckInOutMinute", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Shift_CreateTimeInOutConfig_Result>("Ins_Shift_CreateTimeInOutConfig", shiftIdParameter, startHourIdParameter, startMinuteIdParameter, endHourIdParameter, endMinuteIdParameter, startCheckInMinuteIdParameter, endCheckInMinuteIdParameter, startCheckOutMinuteIdParameter, endCheckOutMinuteIdParameter, startCheckInHourIdParameter, endCheckInHourIdParameter, startCheckOutHourIdParameter, endCheckOutHourIdParameter, maxLateCheckInOutMinuteParameter, minSoonCheckInOutMinuteParameter, langParameter);
        }
    
        public virtual ObjectResult<Ins_Shift_CreateTimeRestConfig_Result> Ins_Shift_CreateTimeRestConfig(Nullable<int> shiftId, Nullable<int> restStartHourId, Nullable<int> restStartMinuteId, Nullable<int> restEndHourId, Nullable<int> restEndMinuteId, string lang, ObjectParameter outResult)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var restStartHourIdParameter = restStartHourId.HasValue ?
                new ObjectParameter("RestStartHourId", restStartHourId) :
                new ObjectParameter("RestStartHourId", typeof(int));
    
            var restStartMinuteIdParameter = restStartMinuteId.HasValue ?
                new ObjectParameter("RestStartMinuteId", restStartMinuteId) :
                new ObjectParameter("RestStartMinuteId", typeof(int));
    
            var restEndHourIdParameter = restEndHourId.HasValue ?
                new ObjectParameter("RestEndHourId", restEndHourId) :
                new ObjectParameter("RestEndHourId", typeof(int));
    
            var restEndMinuteIdParameter = restEndMinuteId.HasValue ?
                new ObjectParameter("RestEndMinuteId", restEndMinuteId) :
                new ObjectParameter("RestEndMinuteId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Shift_CreateTimeRestConfig_Result>("Ins_Shift_CreateTimeRestConfig", shiftIdParameter, restStartHourIdParameter, restStartMinuteIdParameter, restEndHourIdParameter, restEndMinuteIdParameter, langParameter, outResult);
        }
    
        public virtual ObjectResult<Ins_Shift_Get_Status_Clock_In_Out_Shift_Result> Ins_Shift_Get_Status_Clock_In_Out_Shift(Nullable<int> employeeAccountMapId)
        {
            var employeeAccountMapIdParameter = employeeAccountMapId.HasValue ?
                new ObjectParameter("EmployeeAccountMapId", employeeAccountMapId) :
                new ObjectParameter("EmployeeAccountMapId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Shift_Get_Status_Clock_In_Out_Shift_Result>("Ins_Shift_Get_Status_Clock_In_Out_Shift", employeeAccountMapIdParameter);
        }
    
        public virtual ObjectResult<Ins_Shift_GetTimekeeper_logLastest_Result> Ins_Shift_GetTimekeeper_logLastest(Nullable<int> employeeShiftID, Nullable<int> employeeAccountMapID, Nullable<System.DateTime> logTime)
        {
            var employeeShiftIDParameter = employeeShiftID.HasValue ?
                new ObjectParameter("EmployeeShiftID", employeeShiftID) :
                new ObjectParameter("EmployeeShiftID", typeof(int));
    
            var employeeAccountMapIDParameter = employeeAccountMapID.HasValue ?
                new ObjectParameter("EmployeeAccountMapID", employeeAccountMapID) :
                new ObjectParameter("EmployeeAccountMapID", typeof(int));
    
            var logTimeParameter = logTime.HasValue ?
                new ObjectParameter("LogTime", logTime) :
                new ObjectParameter("LogTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Shift_GetTimekeeper_logLastest_Result>("Ins_Shift_GetTimekeeper_logLastest", employeeShiftIDParameter, employeeAccountMapIDParameter, logTimeParameter);
        }
    
        public virtual ObjectResult<Ins_ShiftAssignment_Branch_Create_Result> Ins_ShiftAssignment_Branch_Create(Nullable<int> shiftAssignmentID, Nullable<int> companyID, Nullable<int> branchID, Nullable<bool> isInsertOne)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var isInsertOneParameter = isInsertOne.HasValue ?
                new ObjectParameter("IsInsertOne", isInsertOne) :
                new ObjectParameter("IsInsertOne", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_ShiftAssignment_Branch_Create_Result>("Ins_ShiftAssignment_Branch_Create", shiftAssignmentIDParameter, companyIDParameter, branchIDParameter, isInsertOneParameter);
        }
    
        public virtual int Ins_ShiftAssignment_CreateAssignment(Nullable<int> shiftAssignmentID, Nullable<int> shiftID, string label, Nullable<int> dateOfWeek, ObjectParameter assignmentID)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var shiftIDParameter = shiftID.HasValue ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(int));
    
            var labelParameter = label != null ?
                new ObjectParameter("Label", label) :
                new ObjectParameter("Label", typeof(string));
    
            var dateOfWeekParameter = dateOfWeek.HasValue ?
                new ObjectParameter("DateOfWeek", dateOfWeek) :
                new ObjectParameter("DateOfWeek", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ShiftAssignment_CreateAssignment", shiftAssignmentIDParameter, shiftIDParameter, labelParameter, dateOfWeekParameter, assignmentID);
        }
    
        public virtual ObjectResult<Ins_ShiftAssignment_Department_Create_Result> Ins_ShiftAssignment_Department_Create(Nullable<int> shiftAssignmentID, Nullable<int> companyID, Nullable<int> departmentID, Nullable<bool> isInsertOne)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var isInsertOneParameter = isInsertOne.HasValue ?
                new ObjectParameter("IsInsertOne", isInsertOne) :
                new ObjectParameter("IsInsertOne", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_ShiftAssignment_Department_Create_Result>("Ins_ShiftAssignment_Department_Create", shiftAssignmentIDParameter, companyIDParameter, departmentIDParameter, isInsertOneParameter);
        }
    
        public virtual ObjectResult<Ins_ShiftAssignment_Position_Create_Result> Ins_ShiftAssignment_Position_Create(Nullable<int> shiftAssignmentID, Nullable<int> companyID, Nullable<int> positionID, Nullable<bool> isInsertOne)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var isInsertOneParameter = isInsertOne.HasValue ?
                new ObjectParameter("IsInsertOne", isInsertOne) :
                new ObjectParameter("IsInsertOne", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_ShiftAssignment_Position_Create_Result>("Ins_ShiftAssignment_Position_Create", shiftAssignmentIDParameter, companyIDParameter, positionIDParameter, isInsertOneParameter);
        }
    
        public virtual int Ins_Task_CreateTaskFieldWithOptions(Nullable<int> object_id, string title, string title_nosign, Nullable<bool> add_to_lib, Nullable<bool> notify_when_value_changed, string field_key, Nullable<bool> is_default, Nullable<int> created_user_id, Nullable<int> sort_index, Nullable<bool> active, Nullable<int> object_sort_index, Nullable<bool> object_active)
        {
            var object_idParameter = object_id.HasValue ?
                new ObjectParameter("object_id", object_id) :
                new ObjectParameter("object_id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var title_nosignParameter = title_nosign != null ?
                new ObjectParameter("title_nosign", title_nosign) :
                new ObjectParameter("title_nosign", typeof(string));
    
            var add_to_libParameter = add_to_lib.HasValue ?
                new ObjectParameter("add_to_lib", add_to_lib) :
                new ObjectParameter("add_to_lib", typeof(bool));
    
            var notify_when_value_changedParameter = notify_when_value_changed.HasValue ?
                new ObjectParameter("notify_when_value_changed", notify_when_value_changed) :
                new ObjectParameter("notify_when_value_changed", typeof(bool));
    
            var field_keyParameter = field_key != null ?
                new ObjectParameter("field_key", field_key) :
                new ObjectParameter("field_key", typeof(string));
    
            var is_defaultParameter = is_default.HasValue ?
                new ObjectParameter("is_default", is_default) :
                new ObjectParameter("is_default", typeof(bool));
    
            var created_user_idParameter = created_user_id.HasValue ?
                new ObjectParameter("created_user_id", created_user_id) :
                new ObjectParameter("created_user_id", typeof(int));
    
            var sort_indexParameter = sort_index.HasValue ?
                new ObjectParameter("sort_index", sort_index) :
                new ObjectParameter("sort_index", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var object_sort_indexParameter = object_sort_index.HasValue ?
                new ObjectParameter("object_sort_index", object_sort_index) :
                new ObjectParameter("object_sort_index", typeof(int));
    
            var object_activeParameter = object_active.HasValue ?
                new ObjectParameter("object_active", object_active) :
                new ObjectParameter("object_active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Task_CreateTaskFieldWithOptions", object_idParameter, titleParameter, title_nosignParameter, add_to_libParameter, notify_when_value_changedParameter, field_keyParameter, is_defaultParameter, created_user_idParameter, sort_indexParameter, activeParameter, object_sort_indexParameter, object_activeParameter);
        }
    
        public virtual ObjectResult<Ins_Task_CreatorInfo_Result> Ins_Task_CreatorInfo(Nullable<int> task_id)
        {
            var task_idParameter = task_id.HasValue ?
                new ObjectParameter("task_id", task_id) :
                new ObjectParameter("task_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_CreatorInfo_Result>("Ins_Task_CreatorInfo", task_idParameter);
        }
    
        public virtual ObjectResult<Ins_Task_GetTaskGroupsByTaskId_Result> Ins_Task_GetTaskGroupsByTaskId(Nullable<int> task_id)
        {
            var task_idParameter = task_id.HasValue ?
                new ObjectParameter("task_id", task_id) :
                new ObjectParameter("task_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_GetTaskGroupsByTaskId_Result>("Ins_Task_GetTaskGroupsByTaskId", task_idParameter);
        }
    
        public virtual ObjectResult<Ins_Task_Group_Create_Result> Ins_Task_Group_Create(Nullable<int> bundle_id, string name, string color, string position)
        {
            var bundle_idParameter = bundle_id.HasValue ?
                new ObjectParameter("bundle_id", bundle_id) :
                new ObjectParameter("bundle_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_Group_Create_Result>("Ins_Task_Group_Create", bundle_idParameter, nameParameter, colorParameter, positionParameter);
        }
    
        public virtual ObjectResult<Ins_Task_List_Result> Ins_Task_List(Nullable<int> task_id)
        {
            var task_idParameter = task_id.HasValue ?
                new ObjectParameter("task_id", task_id) :
                new ObjectParameter("task_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_List_Result>("Ins_Task_List", task_idParameter);
        }
    
        public virtual ObjectResult<Ins_Task_ManagersByTask_Result> Ins_Task_ManagersByTask(Nullable<int> task_id)
        {
            var task_idParameter = task_id.HasValue ?
                new ObjectParameter("task_id", task_id) :
                new ObjectParameter("task_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_ManagersByTask_Result>("Ins_Task_ManagersByTask", task_idParameter);
        }
    
        public virtual ObjectResult<Ins_Task_Sub_Create_Result> Ins_Task_Sub_Create(string title, string alias, Nullable<int> bundle_id, Nullable<int> created_user_id, string position)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var bundle_idParameter = bundle_id.HasValue ?
                new ObjectParameter("bundle_id", bundle_id) :
                new ObjectParameter("bundle_id", typeof(int));
    
            var created_user_idParameter = created_user_id.HasValue ?
                new ObjectParameter("created_user_id", created_user_id) :
                new ObjectParameter("created_user_id", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_Sub_Create_Result>("Ins_Task_Sub_Create", titleParameter, aliasParameter, bundle_idParameter, created_user_idParameter, positionParameter);
        }
    
        public virtual ObjectResult<Ins_Task_Sub_ListByBundle_Result> Ins_Task_Sub_ListByBundle(string bundleId)
        {
            var bundleIdParameter = bundleId != null ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_Sub_ListByBundle_Result>("Ins_Task_Sub_ListByBundle", bundleIdParameter);
        }
    
        public virtual ObjectResult<Ins_Task_UsersByTask_Result> Ins_Task_UsersByTask(Nullable<int> task_id)
        {
            var task_idParameter = task_id.HasValue ?
                new ObjectParameter("task_id", task_id) :
                new ObjectParameter("task_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_UsersByTask_Result>("Ins_Task_UsersByTask", task_idParameter);
        }
    
        public virtual ObjectResult<Ins_Task_UsersByUser_Result> Ins_Task_UsersByUser(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Task_UsersByUser_Result>("Ins_Task_UsersByUser", user_idParameter);
        }
    
        public virtual int Ins_Tasks_Create(string title, Nullable<int> created_user_obj, string default_view, string color, string department_ids, string position_ids, string branch_ids, string user_ids)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var created_user_objParameter = created_user_obj.HasValue ?
                new ObjectParameter("created_user_obj", created_user_obj) :
                new ObjectParameter("created_user_obj", typeof(int));
    
            var default_viewParameter = default_view != null ?
                new ObjectParameter("default_view", default_view) :
                new ObjectParameter("default_view", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var department_idsParameter = department_ids != null ?
                new ObjectParameter("department_ids", department_ids) :
                new ObjectParameter("department_ids", typeof(string));
    
            var position_idsParameter = position_ids != null ?
                new ObjectParameter("position_ids", position_ids) :
                new ObjectParameter("position_ids", typeof(string));
    
            var branch_idsParameter = branch_ids != null ?
                new ObjectParameter("branch_ids", branch_ids) :
                new ObjectParameter("branch_ids", typeof(string));
    
            var user_idsParameter = user_ids != null ?
                new ObjectParameter("user_ids", user_ids) :
                new ObjectParameter("user_ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Tasks_Create", titleParameter, created_user_objParameter, default_viewParameter, colorParameter, department_idsParameter, position_idsParameter, branch_idsParameter, user_idsParameter);
        }
    
        public virtual ObjectResult<Ins_Time_GetList_Result> Ins_Time_GetList(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_Time_GetList_Result>("Ins_Time_GetList", langParameter);
        }
    
        public virtual int Ins_User_ChangePassword(Nullable<int> user_id, string old_password, string new_password)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var old_passwordParameter = old_password != null ?
                new ObjectParameter("old_password", old_password) :
                new ObjectParameter("old_password", typeof(string));
    
            var new_passwordParameter = new_password != null ?
                new ObjectParameter("new_password", new_password) :
                new ObjectParameter("new_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_User_ChangePassword", user_idParameter, old_passwordParameter, new_passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_User_Count(string search, Nullable<bool> status, Nullable<int> department_id, Nullable<int> role_id)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_User_Count", searchParameter, statusParameter, department_idParameter, role_idParameter);
        }
    
        public virtual int Ins_User_Create(string username, string email, string phone_number, string full_name, string password, Nullable<int> role_id, Nullable<int> department_id, Nullable<int> position_id, Nullable<int> branch_id, Nullable<int> company_id)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var full_nameParameter = full_name != null ?
                new ObjectParameter("full_name", full_name) :
                new ObjectParameter("full_name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var position_idParameter = position_id.HasValue ?
                new ObjectParameter("position_id", position_id) :
                new ObjectParameter("position_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_User_Create", usernameParameter, emailParameter, phone_numberParameter, full_nameParameter, passwordParameter, role_idParameter, department_idParameter, position_idParameter, branch_idParameter, company_idParameter);
        }
    
        public virtual ObjectResult<Ins_User_GetDetail_Result> Ins_User_GetDetail(Nullable<int> user_id, Nullable<int> company_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_User_GetDetail_Result>("Ins_User_GetDetail", user_idParameter, company_idParameter);
        }
    
        public virtual ObjectResult<Ins_User_GetList_Result> Ins_User_GetList(Nullable<int> page, Nullable<int> limit, string search, Nullable<bool> status, Nullable<int> department_id, Nullable<int> role_id)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("limit", limit) :
                new ObjectParameter("limit", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_User_GetList_Result>("Ins_User_GetList", pageParameter, limitParameter, searchParameter, statusParameter, department_idParameter, role_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_User_IsEmailExist(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_User_IsEmailExist", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_User_IsPhoneExist(string phone_number)
        {
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_User_IsPhoneExist", phone_numberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Ins_User_IsUsernameExist(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Ins_User_IsUsernameExist", usernameParameter);
        }
    
        public virtual int Ins_User_Update(Nullable<int> id, string email, string phone_number, string full_name, string avatar_url, Nullable<bool> is_active, Nullable<int> role_id, Nullable<int> department_id, Nullable<int> position_id, Nullable<int> branch_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var full_nameParameter = full_name != null ?
                new ObjectParameter("full_name", full_name) :
                new ObjectParameter("full_name", typeof(string));
    
            var avatar_urlParameter = avatar_url != null ?
                new ObjectParameter("avatar_url", avatar_url) :
                new ObjectParameter("avatar_url", typeof(string));
    
            var is_activeParameter = is_active.HasValue ?
                new ObjectParameter("is_active", is_active) :
                new ObjectParameter("is_active", typeof(bool));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var position_idParameter = position_id.HasValue ?
                new ObjectParameter("position_id", position_id) :
                new ObjectParameter("position_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_User_Update", idParameter, emailParameter, phone_numberParameter, full_nameParameter, avatar_urlParameter, is_activeParameter, role_idParameter, department_idParameter, position_idParameter, branch_idParameter);
        }
    
        public virtual int Ins_User_UpdateProfile(Nullable<int> user_id, string address, Nullable<System.DateTime> birth_date, Nullable<int> gender, string bio, string skills, Nullable<System.DateTime> join_date)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var birth_dateParameter = birth_date.HasValue ?
                new ObjectParameter("birth_date", birth_date) :
                new ObjectParameter("birth_date", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(int));
    
            var bioParameter = bio != null ?
                new ObjectParameter("bio", bio) :
                new ObjectParameter("bio", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var join_dateParameter = join_date.HasValue ?
                new ObjectParameter("join_date", join_date) :
                new ObjectParameter("join_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_User_UpdateProfile", user_idParameter, addressParameter, birth_dateParameter, genderParameter, bioParameter, skillsParameter, join_dateParameter);
        }
    
        public virtual int Ins_User_UpdateStatus(Nullable<int> user_id, Nullable<bool> is_active)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var is_activeParameter = is_active.HasValue ?
                new ObjectParameter("is_active", is_active) :
                new ObjectParameter("is_active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_User_UpdateStatus", user_idParameter, is_activeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sel_CompanyBranch_GetIds(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sel_CompanyBranch_GetIds", companyIdParameter);
        }
    
        public virtual int Sel_CompanyDepartment_GetCreated(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sel_CompanyDepartment_GetCreated", companyIdParameter);
        }
    
        public virtual int Ins_CompanyBranch_Create(string branchName, string branchAddress, string regionId, Nullable<int> isOnboarding, Nullable<double> latitude, Nullable<double> longitude, Nullable<int> companyId, string alias, string code, ObjectParameter outResult)
        {
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("BranchAddress", branchAddress) :
                new ObjectParameter("BranchAddress", typeof(string));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var isOnboardingParameter = isOnboarding.HasValue ?
                new ObjectParameter("IsOnboarding", isOnboarding) :
                new ObjectParameter("IsOnboarding", typeof(int));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_CompanyBranch_Create", branchNameParameter, branchAddressParameter, regionIdParameter, isOnboardingParameter, latitudeParameter, longitudeParameter, companyIdParameter, aliasParameter, codeParameter, outResult);
        }
    
        public virtual int Ins_Company_UpdateInfoWhenSinup(Nullable<int> accountId, Nullable<int> companyId, string companyName, string alias, Nullable<double> comPany_Latitude, Nullable<double> comPany_Longitude, string comPany_Number_Employee, string comPany_Address, string email, string hearAbout, string usePurpose, string businesFieldIds)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var comPany_LatitudeParameter = comPany_Latitude.HasValue ?
                new ObjectParameter("ComPany_Latitude", comPany_Latitude) :
                new ObjectParameter("ComPany_Latitude", typeof(double));
    
            var comPany_LongitudeParameter = comPany_Longitude.HasValue ?
                new ObjectParameter("ComPany_Longitude", comPany_Longitude) :
                new ObjectParameter("ComPany_Longitude", typeof(double));
    
            var comPany_Number_EmployeeParameter = comPany_Number_Employee != null ?
                new ObjectParameter("ComPany_Number_Employee", comPany_Number_Employee) :
                new ObjectParameter("ComPany_Number_Employee", typeof(string));
    
            var comPany_AddressParameter = comPany_Address != null ?
                new ObjectParameter("ComPany_Address", comPany_Address) :
                new ObjectParameter("ComPany_Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hearAboutParameter = hearAbout != null ?
                new ObjectParameter("HearAbout", hearAbout) :
                new ObjectParameter("HearAbout", typeof(string));
    
            var usePurposeParameter = usePurpose != null ?
                new ObjectParameter("UsePurpose", usePurpose) :
                new ObjectParameter("UsePurpose", typeof(string));
    
            var businesFieldIdsParameter = businesFieldIds != null ?
                new ObjectParameter("BusinesFieldIds", businesFieldIds) :
                new ObjectParameter("BusinesFieldIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Company_UpdateInfoWhenSinup", accountIdParameter, companyIdParameter, companyNameParameter, aliasParameter, comPany_LatitudeParameter, comPany_LongitudeParameter, comPany_Number_EmployeeParameter, comPany_AddressParameter, emailParameter, hearAboutParameter, usePurposeParameter, businesFieldIdsParameter);
        }
    
        public virtual int Ins_Shift_Create(Nullable<int> companyID, string name, string nameNosign, string shiftKey, Nullable<decimal> coefficient, Nullable<decimal> minimumWorkingHour, string note, Nullable<int> earlyCheckOut, Nullable<int> latelyCheckIn, Nullable<int> maxLateCheckInOutMinute, Nullable<int> minSoonCheckInOutMinute, Nullable<int> status, string type, Nullable<int> sortIndex, Nullable<int> isOvertimeShift, Nullable<decimal> mealCoefficient, string timezone, ObjectParameter shiftId)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nameNosignParameter = nameNosign != null ?
                new ObjectParameter("NameNosign", nameNosign) :
                new ObjectParameter("NameNosign", typeof(string));
    
            var shiftKeyParameter = shiftKey != null ?
                new ObjectParameter("ShiftKey", shiftKey) :
                new ObjectParameter("ShiftKey", typeof(string));
    
            var coefficientParameter = coefficient.HasValue ?
                new ObjectParameter("Coefficient", coefficient) :
                new ObjectParameter("Coefficient", typeof(decimal));
    
            var minimumWorkingHourParameter = minimumWorkingHour.HasValue ?
                new ObjectParameter("MinimumWorkingHour", minimumWorkingHour) :
                new ObjectParameter("MinimumWorkingHour", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var earlyCheckOutParameter = earlyCheckOut.HasValue ?
                new ObjectParameter("EarlyCheckOut", earlyCheckOut) :
                new ObjectParameter("EarlyCheckOut", typeof(int));
    
            var latelyCheckInParameter = latelyCheckIn.HasValue ?
                new ObjectParameter("LatelyCheckIn", latelyCheckIn) :
                new ObjectParameter("LatelyCheckIn", typeof(int));
    
            var maxLateCheckInOutMinuteParameter = maxLateCheckInOutMinute.HasValue ?
                new ObjectParameter("MaxLateCheckInOutMinute", maxLateCheckInOutMinute) :
                new ObjectParameter("MaxLateCheckInOutMinute", typeof(int));
    
            var minSoonCheckInOutMinuteParameter = minSoonCheckInOutMinute.HasValue ?
                new ObjectParameter("MinSoonCheckInOutMinute", minSoonCheckInOutMinute) :
                new ObjectParameter("MinSoonCheckInOutMinute", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sortIndexParameter = sortIndex.HasValue ?
                new ObjectParameter("SortIndex", sortIndex) :
                new ObjectParameter("SortIndex", typeof(int));
    
            var isOvertimeShiftParameter = isOvertimeShift.HasValue ?
                new ObjectParameter("IsOvertimeShift", isOvertimeShift) :
                new ObjectParameter("IsOvertimeShift", typeof(int));
    
            var mealCoefficientParameter = mealCoefficient.HasValue ?
                new ObjectParameter("MealCoefficient", mealCoefficient) :
                new ObjectParameter("MealCoefficient", typeof(decimal));
    
            var timezoneParameter = timezone != null ?
                new ObjectParameter("Timezone", timezone) :
                new ObjectParameter("Timezone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_Shift_Create", companyIDParameter, nameParameter, nameNosignParameter, shiftKeyParameter, coefficientParameter, minimumWorkingHourParameter, noteParameter, earlyCheckOutParameter, latelyCheckInParameter, maxLateCheckInOutMinuteParameter, minSoonCheckInOutMinuteParameter, statusParameter, typeParameter, sortIndexParameter, isOvertimeShiftParameter, mealCoefficientParameter, timezoneParameter, shiftId);
        }
    
        public virtual int Ins_ShiftAssignment_Create(Nullable<int> companyID, Nullable<int> shiftID, string title, Nullable<int> sortIndex, Nullable<int> autoApprove, string payrollConfigType, string assignmentTypeObj, string type, string generateTimekeepingType, ObjectParameter shiftAssignmentId)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var shiftIDParameter = shiftID.HasValue ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var sortIndexParameter = sortIndex.HasValue ?
                new ObjectParameter("SortIndex", sortIndex) :
                new ObjectParameter("SortIndex", typeof(int));
    
            var autoApproveParameter = autoApprove.HasValue ?
                new ObjectParameter("AutoApprove", autoApprove) :
                new ObjectParameter("AutoApprove", typeof(int));
    
            var payrollConfigTypeParameter = payrollConfigType != null ?
                new ObjectParameter("PayrollConfigType", payrollConfigType) :
                new ObjectParameter("PayrollConfigType", typeof(string));
    
            var assignmentTypeObjParameter = assignmentTypeObj != null ?
                new ObjectParameter("AssignmentTypeObj", assignmentTypeObj) :
                new ObjectParameter("AssignmentTypeObj", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var generateTimekeepingTypeParameter = generateTimekeepingType != null ?
                new ObjectParameter("GenerateTimekeepingType", generateTimekeepingType) :
                new ObjectParameter("GenerateTimekeepingType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ShiftAssignment_Create", companyIDParameter, shiftIDParameter, titleParameter, sortIndexParameter, autoApproveParameter, payrollConfigTypeParameter, assignmentTypeObjParameter, typeParameter, generateTimekeepingTypeParameter, shiftAssignmentId);
        }
    
        public virtual int Ins_ShiftAssignment_User_Create(Nullable<int> shiftAssignmentID, Nullable<int> accountMapID, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<double> workingHour, Nullable<System.DateTime> workingDay, Nullable<int> weekOfYear, ObjectParameter shiftAssignment_UserId)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var accountMapIDParameter = accountMapID.HasValue ?
                new ObjectParameter("AccountMapID", accountMapID) :
                new ObjectParameter("AccountMapID", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var workingHourParameter = workingHour.HasValue ?
                new ObjectParameter("WorkingHour", workingHour) :
                new ObjectParameter("WorkingHour", typeof(double));
    
            var workingDayParameter = workingDay.HasValue ?
                new ObjectParameter("WorkingDay", workingDay) :
                new ObjectParameter("WorkingDay", typeof(System.DateTime));
    
            var weekOfYearParameter = weekOfYear.HasValue ?
                new ObjectParameter("WeekOfYear", weekOfYear) :
                new ObjectParameter("WeekOfYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ShiftAssignment_User_Create", shiftAssignmentIDParameter, accountMapIDParameter, startTimeParameter, endTimeParameter, workingHourParameter, workingDayParameter, weekOfYearParameter, shiftAssignment_UserId);
        }
    
        public virtual int Ins_ShiftAssignment_User_GetByAccountMapID(Nullable<int> accountMapID, Nullable<int> companyID, Nullable<System.DateTime> workingDayFrom, Nullable<System.DateTime> workingDayTo)
        {
            var accountMapIDParameter = accountMapID.HasValue ?
                new ObjectParameter("AccountMapID", accountMapID) :
                new ObjectParameter("AccountMapID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workingDayFromParameter = workingDayFrom.HasValue ?
                new ObjectParameter("WorkingDayFrom", workingDayFrom) :
                new ObjectParameter("WorkingDayFrom", typeof(System.DateTime));
    
            var workingDayToParameter = workingDayTo.HasValue ?
                new ObjectParameter("WorkingDayTo", workingDayTo) :
                new ObjectParameter("WorkingDayTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ins_ShiftAssignment_User_GetByAccountMapID", accountMapIDParameter, companyIDParameter, workingDayFromParameter, workingDayToParameter);
        }
    
        public virtual ObjectResult<Ins_ShiftAssignment_User_GetByShiftAssignmentID_Result> Ins_ShiftAssignment_User_GetByShiftAssignmentID(Nullable<int> shiftAssignmentID, Nullable<int> accountMapID, Nullable<System.DateTime> workingDayFrom, Nullable<System.DateTime> workingDayTo)
        {
            var shiftAssignmentIDParameter = shiftAssignmentID.HasValue ?
                new ObjectParameter("ShiftAssignmentID", shiftAssignmentID) :
                new ObjectParameter("ShiftAssignmentID", typeof(int));
    
            var accountMapIDParameter = accountMapID.HasValue ?
                new ObjectParameter("AccountMapID", accountMapID) :
                new ObjectParameter("AccountMapID", typeof(int));
    
            var workingDayFromParameter = workingDayFrom.HasValue ?
                new ObjectParameter("WorkingDayFrom", workingDayFrom) :
                new ObjectParameter("WorkingDayFrom", typeof(System.DateTime));
    
            var workingDayToParameter = workingDayTo.HasValue ?
                new ObjectParameter("WorkingDayTo", workingDayTo) :
                new ObjectParameter("WorkingDayTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ins_ShiftAssignment_User_GetByShiftAssignmentID_Result>("Ins_ShiftAssignment_User_GetByShiftAssignmentID", shiftAssignmentIDParameter, accountMapIDParameter, workingDayFromParameter, workingDayToParameter);
        }
    }
}
